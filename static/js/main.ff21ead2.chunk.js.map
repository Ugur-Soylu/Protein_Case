{"version":3,"sources":["assets/apple.png","components/Apples.js","assets/basket.png","components/Basket.js","assets/tree.png","components/Tree.js","redux/reducer.js","redux/store.js","App.js","reportWebVitals.js","index.js"],"names":["Apples","value","useSelector","state","apple1","document","querySelector","apple3","apple5","setTimeout","setAttribute","className","id","src","apple","alt","Basket","basket","Tree","dispatch","useDispatch","tree0","counter","i","tree","onClick","type","reducer","action","initialState","App","store","createStore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"kMAAe,G,YAAA,IAA0B,mC,cCoD1BA,EA9CA,WAEX,IAAMC,EAAQC,aAAY,SAACC,GAAD,OAASA,EAAMF,SACnCG,EAASC,SAASC,cAAc,WAChCC,EAASF,SAASC,cAAc,WAEhCE,GADSH,SAASC,cAAc,WACvBD,SAASC,cAAc,YACvBD,SAASC,cAAc,WAyBtC,OAvBGL,IAEKQ,YAAW,WACPF,EAAOG,aAAa,KAAM,WAC1BD,YAAW,WAAKL,EAAOM,aAAa,KAAM,aAAa,KACvDD,YAAW,WAAKD,EAAOE,aAAa,KAAM,aAAa,OAEzD,KAEFD,YAAW,WACPL,EAAOM,aAAa,KAAM,YAC1BF,EAAOE,aAAa,KAAM,YAC1BH,EAAOG,aAAa,KAAM,cAI5B,MAQN,sBAAKC,UAAU,WAAf,UACI,qBAAKA,UAAU,QAAQC,GAAG,SAASC,IAAKC,EAAOC,IAAI,UACnD,qBAAKJ,UAAU,QAAQC,GAAG,SAASC,IAAKC,EAAOC,IAAI,UACnD,qBAAKJ,UAAU,QAAQC,GAAG,SAASC,IAAKC,EAAOC,IAAI,UACnD,qBAAKJ,UAAU,QAAQC,GAAG,SAASC,IAAKC,EAAOC,IAAI,UACnD,qBAAKJ,UAAU,QAAQC,GAAG,SAASC,IAAKC,EAAOC,IAAI,UACnD,qBAAKJ,UAAU,QAAQC,GAAG,SAASC,IAAKC,EAAOC,IAAI,cC7ChD,MAA0B,mCCW1BC,EARA,WACX,OACI,qBAAKL,UAAU,YAAf,SACI,qBAAKC,GAAG,SAASC,IAAKI,EAAQF,IAAI,cCN/B,MAA0B,iCCuC1BG,EAnCF,WAET,IAAMjB,EAAQC,aAAY,SAACC,GAAD,OAASA,EAAMF,SACnCkB,EAAWC,cACXC,EAAQhB,SAASC,cAAc,SAoBrC,OAlBGL,GAAO,WAEN,IADA,IAAIqB,EAAU,IACNC,EAAE,EAAGA,EAAID,EAASC,IACtBd,YAAW,WACPY,EAAMX,aAAa,KAAM,SACzBY,MACF,IACFb,YAAW,WACPY,EAAMX,aAAa,KAAM,SACzBY,MACF,KAVA,GAmBN,sBAAKX,UAAU,UAAf,UACI,qBAAKA,UAAW,OAAQE,IAAKW,EAAMT,IAAI,SACvC,wBAAQU,QAAS,kBAAKN,EAAS,CAACO,KAAM,oBAAtC,4B,cCrBGC,MAVf,SAAkBxB,EAAOyB,GACrB,OAAQA,EAAOF,MACX,IAAK,iBAEF,OADAvB,EAAMF,OAAQ,EACP,eAAIE,GAEd,QACI,OAAOA,ICHJ0B,EAJM,CACjB5B,OAAQ,GC+BG6B,MArBf,WAOA,IAAMC,EAAQC,YAAYL,EAASE,GAEjC,OACE,cAAC,IAAD,CAAUE,MAAOA,EAAjB,SACA,sBAAKpB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,UCbSsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvC,SAASwC,eAAe,SAM1BZ,M","file":"static/js/main.ff21ead2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/apple.faa774a6.png\";","import React from 'react'\r\nimport apple from \"../assets/apple.png\"\r\nimport {useSelector} from \"react-redux\";\r\n\r\n\r\n\r\nconst Apples = () => {\r\n    \r\n    const value = useSelector((state)=>state.value)\r\n    const apple1 = document.querySelector(\"#apple1\")\r\n    const apple3 = document.querySelector(\"#apple3\")\r\n    const apple4 = document.querySelector(\"#apple4\")\r\n    const apple5 = document.querySelector(\"#apple5\")\r\n    const apple6 = document.querySelector(\"#apple6\")\r\n\r\n    if(value){\r\n        \r\n            setTimeout(()=>{\r\n                apple3.setAttribute(\"id\", \"apple33\")\r\n                setTimeout(()=>{apple1.setAttribute(\"id\", \"apple11\")}, 300)\r\n                setTimeout(()=>{apple5.setAttribute(\"id\", \"apple55\")}, 600)                \r\n                \r\n            },3000)\r\n\r\n            setTimeout(()=>{\r\n                apple1.setAttribute(\"id\", \"apple111\")\r\n                apple5.setAttribute(\"id\", \"apple555\")\r\n                apple3.setAttribute(\"id\", \"apple333\")\r\n                // apple4.setAttribute(\"id\", \"apple44\")\r\n                // apple6.setAttribute(\"id\", \"apple66\")\r\n                \r\n            },5000)\r\n\r\n\r\n            \r\n        }\r\n        \r\n    \r\n    return (\r\n        <div className=\"appleDiv\">\r\n            <img className=\"apple\" id=\"apple1\" src={apple} alt=\"apple\"/>\r\n            <img className=\"apple\" id=\"apple2\" src={apple} alt=\"apple\"/>\r\n            <img className=\"apple\" id=\"apple3\" src={apple} alt=\"apple\"/>\r\n            <img className=\"apple\" id=\"apple4\" src={apple} alt=\"apple\"/>\r\n            <img className=\"apple\" id=\"apple5\" src={apple} alt=\"apple\"/>\r\n            <img className=\"apple\" id=\"apple6\" src={apple} alt=\"apple\"/>\r\n            \r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Apples\r\n","export default __webpack_public_path__ + \"static/media/basket.6770bd41.png\";","import React from 'react';\r\nimport basket from \"../assets/basket.png\"\r\n\r\nconst Basket = () => {\r\n    return (\r\n        <div className=\"basketDiv\">\r\n            <img id=\"basket\" src={basket} alt=\"basket\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Basket\r\n","export default __webpack_public_path__ + \"static/media/tree.d29c5acb.png\";","import React from 'react'\r\nimport tree from \"../assets/tree.png\"\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\n\r\nconst Tree = () => {\r\n\r\n    const value = useSelector((state)=>state.value)\r\n    const dispatch = useDispatch();\r\n    const tree0 = document.querySelector(\".Tree\")\r\n\r\n    if(value){\r\n        let counter = 60000;\r\n        for(let i=0; i < counter; i++){\r\n            setTimeout(()=>{\r\n                tree0.setAttribute(\"id\", \"tree2\")\r\n                counter--\r\n            },50)\r\n            setTimeout(()=>{\r\n                tree0.setAttribute(\"id\", \"tree1\");\r\n                counter--\r\n            },100)\r\n\r\n        }\r\n      \r\n        \r\n        \r\n    }\r\n  \r\n    return (\r\n        <div className=\"treeDiv\">\r\n            <img className= \"Tree\"  src={tree} alt=\"tree\" />\r\n            <button onClick={()=> dispatch({type: \"CHANGE TO TRUE\"})}>Shake Tree</button>    \r\n            {/* <button>fdff</button>                    \r\n            <button>fdff</button>                    \r\n            <button>fdff</button>                     */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tree\r\n\r\n","function reducer (state, action){\r\n    switch (action.type){\r\n        case \"CHANGE TO TRUE\" :\r\n           state.value = true;\r\n           return {...state}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default reducer;","const initialState = {\r\n    value : false\r\n}\r\n\r\nexport default initialState;","import './App.css';\n// import background from \"./assets/garden2.jpg\"\nimport Apples from './components/Apples';\nimport Basket from './components/Basket';\nimport Tree from './components/Tree';\n// import {useState} from \"react\";\nimport {createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport reducer from './redux/reducer';\nimport initialState from './redux/store';\n\nfunction App() {\n\n// const[value, setValue] = useState(false)\n// const changeValue = ()=>{\n//       setValue(true)\n//   }\n\nconst store = createStore(reducer, initialState)\n\n  return (    \n    <Provider store={store}>\n    <div className=\"App\">      \n      <Tree/>\n      <Apples/>      \n      <Basket/>\n    </div>    \n    \n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}